name: coverage

env:
  COBERTURA_REPORT: cobertura.xml
  COVERALLS_REPORT: coveralls.json
  HTML_REPORT_DIR: html/
  COVERAGE_ARTIFACT_NAME: coverage-report

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  create-coverage-report:
    runs-on: ubuntu-latest
    container:
      image: "ghcr.io/dnkpp/gcc:14"

    steps:
      - uses: actions/checkout@v4

      - name: Install gcovr
        run: |
          python -m pip install gcovr
          gcovr --version

      - name: Configure
        env:
          LDFLAGS: "--coverage"
          CXXFLAGS: "-g -O0 --coverage -fno-inline -fprofile-abs-path -fkeep-inline-functions -fkeep-static-functions"
        run: |
          cmake -S . \
              -B build \
              --log-level=DEBUG \
              -D CMAKE_VERBOSE_MAKEFILE=YES \
              -D CMAKE_BUILD_TYPE="Debug" \
              -D MIMICPP_ENABLE_ADAPTER_TESTS=YES \
              -D MIMICPP_CONFIG_EXPERIMENTAL_CATCH2_MATCHER_INTEGRATION=YES \
              -D MIMICPP_CONFIG_EXPERIMENTAL_UNICODE_STR_MATCHER=YES \
              -D MIMICPP_CONFIG_EXPERIMENTAL_STACKTRACE=YES \
              -D MIMICPP_CONFIG_EXPERIMENTAL_USE_CPPTRACE=YES

      - name: Build
        run: |
          cmake --build build -j5

      - name: Run tests
        shell: bash
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: |
          ctest --test-dir build \
              -C Debug \
              -j4

      - name: Run gcovr
        run: |
          # circumvent "fatal: detected dubious ownership in repository" error
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
          gcovr -j4 -v \
              --exclude-lines-by-pattern "(\s*assert\(|\s*unreachable\(\);)" \
              --exclude-unreachable-branches \
              --exclude-function-lines \
              --exclude-noncode-lines \
              --exclude-throw-branches \
              --decisions \
              --calls \
              --keep \
              --cobertura ${{env.COBERTURA_REPORT}} --cobertura-pretty \
              --html-nested ${{env.HTML_REPORT_DIR}} --html-title "mimic++ Coverage Report" \
              --coveralls ${{env.COVERALLS_REPORT}} --coveralls-pretty

      - name: Upload gcov coverage report artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gcov-files
          path: "**/*.gcov"
          if-no-files-found: error

      - name: Upload generated report artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.COVERAGE_ARTIFACT_NAME}}
          path: |
            ${{env.COBERTURA_REPORT}}
            ${{env.COVERALLS_REPORT}}
            ${{env.HTML_REPORT_DIR}}
          if-no-files-found: error

  codacy-report:
    needs: create-coverage-report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: ${{env.COVERAGE_ARTIFACT_NAME}}

      - name: Upload coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{secrets.CODACY_PROJECT_TOKEN}}
          coverage-reports: ${{env.COBERTURA_REPORT}}

  codecov-report:
    needs: create-coverage-report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: ${{env.COVERAGE_ARTIFACT_NAME}}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          name: $GITHUB_REPOSITORY
          token: ${{secrets.CODECOV_TOKEN}}
          files: ${{env.COBERTURA_REPORT}}
          fail_ci_if_error: true
          verbose: true

  coveralls-report:
    needs: create-coverage-report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: ${{env.COVERAGE_ARTIFACT_NAME}}

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          file: ${{env.COVERALLS_REPORT}}
          # can not use ${{ github.workspace }} here
          # see: https://github.com/actions/checkout/issues/785
          base-path: "/__w/mimicpp/mimicpp/include"
          format: coveralls
          debug: true
          fail-on-error: true
